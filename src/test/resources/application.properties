# Database Configuration
#localhost
#spring.datasource.url=jdbc:mariadb://localhost:3306/ivet?useSSL=false&allowPublicKeyRetrieval=true
#spring.datasource.username=maria
#spring.datasource.password=maria
##JPA
## Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDB103Dialect
## Hibernate ddl auto (create, create-drop, update, none): with "update" the database
## schema will be automatically updated accordingly to java entities found in the project
#spring.jpa.hibernate.ddl-auto=none
## JPA-SQL
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.format_sql=true

##Dá para configurar usuários padrão para a aplicação (via properties), assim:
##spring.security.user.name="ana"
##spring.security.user.password="123"

########################## Daqui para baixo habilita o H2  ##########################

## H2 - Banco de dados em memória
spring.datasource.url=jdbc:h2:mem:pet
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
## Instrui o SB a popular o DB com os dados do data.sql
#spring.jpa.defer-datasource-initialization= true

##H2 Settings
spring.h2.console.enabled=true
spring.h2.console.path=/console
spring.h2.console.settings.trace=false

##SQL
##none para o SB utilizar o arquivo de esquema do resources
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=none
#  spring.jpa.hibernate.ddl-auto=create-drop cria as tabelas automaticas,
# Deixei nome pq esta dando erro e creiei o Shema.sql

## logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
logging.level.org.hibernate.SQL=debug
